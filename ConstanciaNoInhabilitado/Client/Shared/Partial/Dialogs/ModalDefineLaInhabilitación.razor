@using ConstanciaNoInhabilitado.Shared.Entities.Login;
@using ConstanciaNoInhabilitado.Client.Componentes.Admin.ComponentesAdmin.RegistrarInhabilitado;
@using ConstanciaNoInhabilitado.Client.Componentes.Admin.ComponentesAdmin.AgregarInhabilitación;
@using ConstanciaNoInhabilitado.Shared.Entities.RegistroInhabilitacion;

<MudDialog>
    <TitleContent>
        <div class="container">
            <p style="text-align:center; font-size: 1.8rem;">
                <b>Define la Inhabilitación</b>
            </p>
        </div>
    </TitleContent>
    <DialogContent>
        <MudGrid Justify="Justify.Center">
            <FormAgregarInhabilitación DefineInhabilitacion="true" RegistroCorrectoModalAsistente="EnviarInhabilitacion" InhabilitadoRFC="InhabilitadoModalDefineInhabilitacion" ValidarInformacionDeModalInhabilitacionAsistente="true"/>
        </MudGrid>
    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>

<style>
    a {
        color: #A5987E;
        opacity: 75%;
    }

    .my-custom-class {
        backdrop-filter: blur(10px);
    }
</style>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public Inhabilitado InhabilitadoModalDefineInhabilitacion { set; get; }
    private string Dependencia { set; get; }

    private async Task EnviarInhabilitacion(InhabilitacionDTO inhabilitacionDTO)
    {
        MudDialog.Close(DialogResult.Ok(inhabilitacionDTO));
    }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
}
