@using ConstanciaNoInhabilitado.Shared.Entities.Login;

<MudGrid Justify="Justify.Center">
    <MudItem xs="7">
        <MudTextField @bind-Value="servidorPublico.Nombre" Label="Nombre" Variant="Variant.Outlined" Required="true"></MudTextField>
    </MudItem>
    <MudItem xs="7">
        <MudTextField @bind-Value="servidorPublico.ApellidoPaterno" Label="Apellido Paterno" Variant="Variant.Outlined" Required="true"></MudTextField>
    </MudItem>
    <MudItem xs="7">
        <MudTextField @bind-Value="servidorPublico.ApellidoMaterno" Label="Apellido Materno" Variant="Variant.Outlined" Required="true"></MudTextField>
    </MudItem>
    @if (!DefineInhabilitado)
    {
        <MudItem xs="7">
            <MudTextField @bind-Value="servidorPublico.RFC" Label="R.F.C" Variant="Variant.Outlined" Required="true"></MudTextField>
        </MudItem>
    }  
    <MudItem xs="7">
        <MudTextField @bind-Value="servidorPublico.CURP" Label="CURP" Variant="Variant.Outlined" Required="true"></MudTextField>
    </MudItem>
    <MudItem xs="7">
        <MudSelect T="int" Label="Sexo" Variant="Variant.Filled" AnchorOrigin="Origin.BottomCenter" @bind-Value="servidorPublico.idGenero" Required="true">
            @foreach (var item in ListSexo)
            {
                <MudSelectItem Value="@(item.Value)" >
                    @item.Text
                </MudSelectItem>
            }
        </MudSelect>
    </MudItem>
    <MudItem xs="7">
        @if (DefineInhabilitado)
        {
            <MudButton Variant="Variant.Outlined" Color="Color.Secondary">Establecer Inhabilitado</MudButton>
        }
        else
        {

            <MudButton Variant="Variant.Outlined" Color="Color.Secondary" OnClick="callEvent">Guardar Registro</MudButton>
        }
    </MudItem>
</MudGrid>




@code {
    [Parameter] public bool DefineInhabilitado { set; get; } = false;
    [Parameter]
    public ServidorPublico? servidorPublico { set; get; } = new ServidorPublico();
    [Parameter]
    public EventCallback<ServidorPublico> eventCallback { set; get; }
    private List<Sexo> ListSexo = new List<Sexo>
    {
        new Sexo { Value =1, Text = "Femenino" },
        new Sexo { Value = 2, Text = "Masculino" },
        new Sexo { Value = 3, Text = "Otro" }
    };

    private async Task callEvent()
    {
        await eventCallback.InvokeAsync(servidorPublico);
    }
}
